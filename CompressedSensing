using JuMP,Gurobi

function fgradient(A,S,b)
    Kinv = inv(A*S*A')
    return [(1 + b' * -Kinv * A[:,i] * transpose(A[:,i]) * Kinv * b) for i=1:n]
end

function compressedSensing(A,b; indices0 = )

    m = size(A,1)
    n = size(A,2)

    s0 = zeros(n)


    model = model(solver = GurobiSolver(TimeLimit = 120, LazyConstraints = 1))

    @variable(model, s[1:n],Bin)
    @variable(model, t>=0)

    # ensure that our matrix is invertible
    @constraint(model, sum(s) >= m)


end
